name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: Generate unique ID and timestamp
        id: generate-id
        run: |
          UNIQUE_ID=$(date +%Y%m%d-%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)
          echo "unique_id=$UNIQUE_ID" >> $GITHUB_OUTPUT
          echo "timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
          echo "commit_msg=$(git log -1 --pretty=%B | head -1)" >> $GITHUB_OUTPUT
          echo "branch_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Prepare test results
        if: always()
        run: |
          mkdir -p temp-reports/${{ steps.generate-id.outputs.unique_id }}

          # Copy Playwright HTML report
          if [ -d "playwright-report" ]; then
            cp -r playwright-report/* temp-reports/${{ steps.generate-id.outputs.unique_id }}/
          fi

          # Create metadata file for the test run
          cat > temp-reports/${{ steps.generate-id.outputs.unique_id }}/metadata.json << EOF
          {
            "id": "${{ steps.generate-id.outputs.unique_id }}",
            "timestamp": "${{ steps.generate-id.outputs.timestamp }}",
            "commit": "${{ github.sha }}",
            "commitMessage": "${{ steps.generate-id.outputs.commit_msg }}",
            "branch": "${{ steps.generate-id.outputs.branch_name }}",
            "author": "${{ github.actor }}",
            "runId": "${{ github.run_id }}",
            "runNumber": "${{ github.run_number }}",
            "status": "${{ job.status }}"
          }
          EOF

      - name: Checkout gh-pages branch
        if: always()
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup gh-pages branch
        if: always()
        run: |
          cd gh-pages
          git config user.name github-actions
          git config user.email github-actions@github.com

          # Create reports directory if it doesn't exist
          mkdir -p reports

      - name: Copy test results to gh-pages
        if: always()
        run: |
          # Copy the test results to gh-pages
          cp -r temp-reports/${{ steps.generate-id.outputs.unique_id }} gh-pages/reports/

          cd gh-pages

          # Create or update the reports index
          if [ ! -f reports/index.json ]; then
            echo "[]" > reports/index.json
          fi

          # Add current test result to index
          python3 << 'EOF'
          import json
          import os

          # Read existing index
          with open('reports/index.json', 'r') as f:
              results = json.load(f)

          # Read current test metadata
          with open('reports/${{ steps.generate-id.outputs.unique_id }}/metadata.json', 'r') as f:
              metadata = json.load(f)

          # Add to results if not already present
          if not any(r['id'] == metadata['id'] for r in results):
              results.append(metadata)

          # Sort by timestamp (newest first)
          results.sort(key=lambda x: x.get('timestamp', ''), reverse=True)

          # Keep only last 50 results to avoid too large files
          results = results[:50]

          # Save updated index
          with open('reports/index.json', 'w') as f:
              json.dump(results, f, indent=2)
          EOF

          git add .
          git commit -m "Add test results for ${{ steps.generate-id.outputs.unique_id }}" || exit 0
          git push

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ steps.generate-id.outputs.unique_id }}
          path: playwright-report/
          retention-days: 30

      - name: Cleanup temp reports
        if: always()
        run: rm -rf temp-reports
