name: Playwright CI & GitHub Pages Report

on:
  push:
    branches:
      - main

jobs:
  test-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright tests
        run: npx playwright test --reporter html

      - name: Generate Unique Report ID
        id: vars
        run: echo "id=run-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Copy HTML report to folder
        run: |
          mkdir ${{ steps.vars.outputs.id }}
          cp -r playwright-report/* ${{ steps.vars.outputs.id }}/

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Sync new report to gh-pages and update index.html
        run: |
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          entry="{\"id\": \"${{ steps.vars.outputs.id }}\", \"timestamp\": \"$timestamp\"}"

          cd gh-pages

          # Copy report
          mkdir -p ${{ steps.vars.outputs.id }}
          cp -r ../${{ steps.vars.outputs.id }}/* ${{ steps.vars.outputs.id }}/

          # Ensure index.json exists
          if [ ! -f index.json ]; then
            echo "[]" > index.json
          fi

          # Append to index.json
          jq ". + [$entry]" index.json > tmp.json && mv tmp.json index.json

          # Generate index.html
          cat > index.html <<EOF
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Playwright Test Reports</title>
    <style>
      body {
        font-family: sans-serif;
        margin: 2rem;
        background: #f4f4f4;
      }
      h1 {
        text-align: center;
        color: #333;
      }
      .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1rem;
        margin-top: 2rem;
      }
      .card {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }
      .card h2 {
        font-size: 1.1rem;
        margin: 0 0 0.5rem;
      }
      .card p {
        color: #666;
        font-size: 0.9rem;
      }
      .cta {
        margin-top: 1rem;
        text-align: right;
      }
      .cta a {
        text-decoration: none;
        background: #007acc;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        transition: background 0.2s;
      }
      .cta a:hover {
        background: #005fa3;
      }
    </style>
  </head>
  <body>
    <h1>Playwright Test Reports</h1>
    <div class="grid">
EOF

          jq -c '.[]' index.json | while read -r run; do
            id=$(echo "$run" | jq -r '.id')
            timestamp=$(echo "$run" | jq -r '.timestamp')
            cat >> index.html <<EOF
      <div class="card">
        <h2>$id</h2>
        <p>Run Date: $timestamp</p>
        <div class="cta">
          <a href="./$id/index.html" target="_blank">View Report</a>
        </div>
      </div>
EOF
          done

          cat >> index.html <<EOF
    </div>
  </body>
</html>
EOF

          # Commit and push
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Add Playwright report ${{ steps.vars.outputs.id }}" || echo "No changes to commit"
          git push origin gh-pages